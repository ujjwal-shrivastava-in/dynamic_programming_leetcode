class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<int>> dp(m, vector<int>(n, 0));

        dp[0][0] = grid[0][0];

        // here we are just filling all the edge elements in the matrix

        // this is top horizontal plane
        for(int i=1;i<n;i++){
            dp[0][i] = grid[0][i]+dp[0][i-1];
        }

        // this is left most vertical plane
        for(int i=1;i<m;i++){
            dp[i][0] = grid[i][0]+dp[i-1][0];
        }


        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                int n = grid[i][j];
                dp[i][j] = min(n+dp[i-1][j] , n+dp[i][j-1]);
            }
        }

        return dp[m-1][n-1];
    }
};
